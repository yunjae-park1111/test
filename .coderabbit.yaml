# ============================================================================
# CodeRabbit AI 코드 리뷰 설정 파일
# ============================================================================
# 이 파일은 CodeRabbit의 자동 리뷰 동작을 제어합니다.
# 자세한 설정 옵션: https://docs.coderabbit.ai/guides/configuration
# ============================================================================

# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json

# ============================================================================
# 기본 리뷰 설정
# ============================================================================
reviews:
  # 자동 리뷰 활성화 여부
  auto_review:
    enabled: true    # PR 생성/업데이트 시 자동으로 리뷰 실행
    
  # 리뷰 대상 파일 패턴 (포함할 파일들)
  include_patterns:
    - "**/*.{js,ts,jsx,tsx}"     # JavaScript/TypeScript 파일
    - "**/*.{py,java,go,cpp,c,cs}"  # 기타 프로그래밍 언어
    - "**/*.{yml,yaml,json,md}"   # 설정 파일 및 문서
  
  # 리뷰 제외 파일 패턴 (무시할 파일들)
  exclude_patterns:
    - "node_modules/**"    # Node.js 의존성 폴더
    - "dist/**"           # 빌드 결과물
    - "build/**"          # 빌드 결과물
    - "*.min.js"          # 압축된 JavaScript 파일
    - "coverage/**"       # 테스트 커버리지 리포트
    - "vendor/**"         # 벤더 라이브러리
    - ".git/**"          # Git 메타데이터

  # PR에서 변경 요청 워크플로우 비활성화 (코멘트만 제공)
  request_changes_workflow: false
  
  # 리뷰 대상 베이스 브랜치들
  base_branches:
    - "main"      # 메인 브랜치
    - "master"    # 마스터 브랜치 (레거시)
    - "develop"   # 개발 브랜치

# ============================================================================
# 상세 리뷰 설정
# ============================================================================
review_settings:
  # 리뷰 철저함 정도: "low" | "medium" | "high"
  thoroughness: "medium"
  
  # 중점 검토 영역
  focus_areas:
    - "security"          # 보안 취약점 검사
    - "performance"       # 성능 최적화 검토
    - "maintainability"   # 유지보수성 평가
    - "testing"           # 테스트 커버리지 확인
    - "documentation"     # 문서화 품질 검토
  
  # 언어별 특화 설정
  language_specific:
    # JavaScript/TypeScript 설정
    javascript:
      check_async_patterns: true      # async/await 패턴 검사
      check_console_statements: true  # console.log 등 디버그 코드 감지
      detect_unused_variables: true   # 사용하지 않는 변수 감지
    
    # Python 설정
    python:
      check_pep8: true          # PEP 8 스타일 가이드 준수 검사
      security_analysis: true   # 보안 취약점 분석
    
    # Markdown 설정
    markdown:
      check_links: true    # 링크 유효성 검사
      spell_check: false   # 맞춤법 검사 (한국어 지원 제한으로 비활성화)

# ============================================================================
# 보안 검사 설정
# ============================================================================
security:
  secrets_detection: true    # 하드코딩된 시크릿 (API 키, 패스워드 등) 탐지
  dependency_check: true     # 의존성 라이브러리 보안 취약점 검사
  
# ============================================================================
# 코드 품질 기준
# ============================================================================
quality:
  complexity_threshold: 10       # 순환 복잡도 임계값 (10 이상시 경고)
  duplication_check: true        # 코드 중복 검사 활성화
  function_length_threshold: 50  # 함수 길이 임계값 (50라인 이상시 경고)

# ============================================================================
# 파일 경로 필터링 (추가 세밀한 제어)
# ============================================================================
path_filters:
  - path_globs:
      - "**/*.js"     # JavaScript 파일
      - "**/*.ts"     # TypeScript 파일
      - "**/*.jsx"    # React JSX 파일
      - "**/*.tsx"    # React TypeScript 파일
      - "**/*.py"     # Python 파일
      - "**/*.java"   # Java 파일
      - "**/*.go"     # Go 파일
      - "**/*.md"     # Markdown 문서

# ============================================================================
# ChatOps 설정 (코멘트 상호작용)
# ============================================================================
chatops:
  chat:
    # 리뷰 수행시 기본 지시사항
    instructions: "Please review this code for security, performance, and maintainability. Focus on potential bugs, optimization opportunities, and code quality improvements."
